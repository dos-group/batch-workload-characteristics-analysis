---
- name: Setup Ubuntu server
  hosts: all
  become: yes
  vars:
    jdk_version: 8
    python_version: "2.7"
    maven_version: "3.6.3"
    hadoop_version: "3.1"
    hive_version: "3.0"
    hibench_home: "/root/HiBench"
    m2_home: "/usr/local/apache-maven"
    java_home: "/usr/lib/jvm/java-{{ jdk_version }}-openjdk-amd64"

  tasks:
    - name: Check if Maven is already installed
      stat:
        path: "{{ m2_home }}/bin/mvn"
      register: maven_installed

    - name: Install basic tools
      apt:
        name:
          - build-essential
          - software-properties-common
          - git
          - tar
          - wget
          - curl
          - man
          - unzip
          - vim-tiny
          - bc
        update_cache: yes
        state: present

    - name: Install Python
      apt:
        name:
          - "python{{ python_version }}"
          - "python{{ python_version }}-dev"
        update_cache: yes
        state: present

    - name: Create symlink for python
      file:
        src: /usr/bin/python2.7
        dest: /usr/bin/python2
        state: link

    - name: Add repository for Java
      apt_repository:
        repo: ppa:openjdk-r/ppa
        state: present

    - name: Install Java
      apt:
        name: "openjdk-{{ jdk_version }}-jdk"
        update_cache: yes
        state: present

    - name: Install Maven if not already installed
      block:
        - name: Install CA certificates
          apt:
            name: ca-certificates
            state: latest
            update_cache: yes

        - name: Update CA certificates
          command: update-ca-certificates -f

        - name: Download Maven
          get_url:
            url: "https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/{{ maven_version }}/apache-maven-{{ maven_version }}-bin.tar.gz"
            dest: "/tmp/apache-maven-{{ maven_version }}-bin.tar.gz"
            mode: '0644'

        - name: Extract Maven
          unarchive:
            src: "/tmp/apache-maven-{{ maven_version }}-bin.tar.gz"
            dest: "/usr/local/"
            remote_src: yes
            creates: "/usr/local/apache-maven-{{ maven_version }}"

        - name: Move Maven to its final destination
          command: mv /usr/local/apache-maven-{{ maven_version }} {{ m2_home }}
      when: not maven_installed.stat.exists

    - name: Set environment variables for Java and Maven in profile
      blockinfile:
        path: /etc/profile.d/java_maven_env.sh
        block: |
          export JAVA_HOME={{ java_home }}
          export PATH=$PATH:$JAVA_HOME/bin
          export M2_HOME={{ m2_home }}
          export PATH=$PATH:$M2_HOME/bin
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        owner: root
        group: root
        mode: '0644'

    - name: Download and setup HiBench
      block:
        - name: Create HiBench home directory
          file:
            path: "{{ hibench_home }}"
            state: directory

        - name: Download HiBench
          get_url:
            url: "https://github.com/Intel-bigdata/HiBench/archive/refs/tags/v7.1.1.tar.gz"
            dest: "/tmp/HiBench.tar.gz"

        - name: Extract HiBench
          unarchive:
            src: "/tmp/HiBench.tar.gz"
            dest: "{{ hibench_home }}"
            remote_src: yes
            extra_opts: ["--strip-components=1"]

        - name: Install thrift compiler
          apt:
            name: thrift-compiler
            update_cache: yes
            state: present

        - name: Update HiBench dependencies in POM
          replace:
            path: "{{ hibench_home }}/hadoopbench/mahout/pom.xml"
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
          loop:
            - { regexp: "<repo2>http://archive.cloudera.com</repo2>", replace: "<repo2>https://archive.apache.org</repo2>" }
            - { regexp: "cdh5/cdh/5/mahout-0.9-cdh5.1.0.tar.gz", replace: "dist/mahout/0.9/mahout-distribution-0.9.tar.gz" }
            - { regexp: "aa953e0353ac104a22d314d15c88d78f", replace: "09b999fbee70c9853789ffbd8f28b8a3" }

        - name: Build HiBench project
          shell: /usr/local/apache-maven/bin/mvn clean package -Dhadoop={{ hadoop_version }} -Dhive={{ hive_version }}
          args:
            chdir: "{{ hibench_home }}"
